{"version":3,"sources":["Request.js","components/Light.js","components/Thermostat.js","components/CommandModal.js","pages/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["requestIp","process","port","getRooms","a","axios","get","getRoomByID","id","updateThermostatInfo","data","patch","headers","updateLightInfo","getThermostatInfo","getLightInfo","deleteRoom","delete","deleteThermostat","deleteLight","addLight","post","addThermostat","addRoom","analyzePhrase","recognizeAudio","Light","props","React","useState","light_status","checked","setChecked","brightness","setBrightness","lightInfo","setLightInfo","available","setAvailable","rgbColor","lightColor","setLightColor","lightDelete","lightID","content","color","onChange","onMouseUp","JSON","stringify","then","res","useEffect","initialSetup","refresh","style","width","margin","height","borderRadius","title","display","flexDirection","justifyContent","alignItems","name","size","danger","type","icon","MinusCircleTwoTone","twoToneColor","onClick","e","BulbOutlined","bordered","marginBottom","checkedChildren","unCheckedChildren","val","rgb","className","trigger","placement","backgroundColor","disabled","value","marks","0","100","onAfterChange","Thermostat","thermostatInfo","setThermostatInfo","temperature_set","tempSet","setTempSet","thermostatDelete","thermostatID","response","interval","setInterval","clearInterval","FireOutlined","actual_temperature","minValue","maxValue","circleRatio","styles","buildStyles","rotation","trailColor","fontSize","textAlign","paddingTop","min","max","10","30","CommandModal","loadingAnalyze","setLoadingAnalyze","isRecording","setIsRecording","isComputing","setIsComputing","Form","useForm","form","TextArea","Input","audioRecognize","audio","fd","FormData","append","blob","console","log","transcription","setFieldsValue","phrase","error","message","handleAnalyze","values","ERROR","onVisibleChange","roomID","currentRoom","changeRoom","success","visible","footer","onCancel","bodyStyle","padding","destroyOnClose","onFinish","Item","rules","required","rows","allowClear","placeholder","record","onStop","audioRecorded","loading","marginRight","htmlType","Option","Select","Header","Layout","Sider","Content","TabPane","Tabs","Dashboard","collapsed","setCollapsed","currentRoomID","setCurrentRoomID","rooms","setRooms","roomData","setRoomData","activeTab","setActiveTab","addCompOpen","setAddCompOpen","delComp","setDelComp","setDisplay","showAnalyze","setShowAnalyze","setRefresh","setWebsocket","webSocketData","setWebSocketData","refreshRooms","roomDelete","tmp","handleSubmit","requestError","device","room","lightName","isRgb","catch","addRoomHandle","toLowerCase","renderRoomComponents","component","Object","keys","length","constructor","lights","map","item","websocketData","thermostats","openWebSocket","ws","WebSocket","onopen","onclose","code","warning","setTimeout","onmessage","received","parse","onerror","close","tmpRooms","flexWrap","collapsible","collapsedWidth","overflow","HomeOutlined","theme","mode","defaultSelectedKeys","String","selectable","key","charAt","toUpperCase","slice","createElement","MenuOutlined","fontWeight","shape","MessageOutlined","CloseOutlined","DeleteOutlined","PlusOutlined","onClose","1","2","defaultActiveKey","tab","layout","onFinishFailed","label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.668abeb4.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst requestIp = process.env.REACT_APP_REQUEST_IP\r\nconst port = 9000\r\n\r\nexport const getRooms = async () => {\r\n  return axios.get(`http://${requestIp}:${port}/room/`)\r\n}\r\n\r\nexport const getRoomByID = async (id) => {\r\n  return axios.get(`http://${requestIp}:${port}/room/${id}/`)\r\n}\r\n\r\nexport const updateThermostatInfo = async (id, data) => {\r\n  return axios.patch(`http://${requestIp}:${port}/thermostat/${id}/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateLightInfo = async (id, data) => {\r\n  return axios.patch(`http://${requestIp}:${port}/light/${id}/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport const getThermostatInfo = async (id) => {\r\n  return axios.get(`http://${requestIp}:${port}/thermostat/${id}/`)\r\n}\r\n\r\nexport const getLightInfo = async (id) => {\r\n  return axios.get(`http://${requestIp}:${port}/light/${id}/`)\r\n}\r\n\r\nexport const deleteRoom = async (id) => {\r\n  return axios.delete(`http://${requestIp}:${port}/room/${id}/`)\r\n}\r\n\r\nexport const deleteThermostat = async (id) => {\r\n  return axios.delete(`http://${requestIp}:${port}/thermostat/${id}/`)\r\n}\r\n\r\nexport const deleteLight = async (id) => {\r\n  return axios.delete(`http://${requestIp}:${port}/light/${id}/`)\r\n}\r\n\r\nexport const addLight = async(data) => {\r\n  return axios.post(`http://${requestIp}:${port}/light/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport const addThermostat = async(data) => {\r\n  return axios.post(`http://${requestIp}:${port}/thermostat/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport const addRoom = async(data) => {\r\n  return axios.post(`http://${requestIp}:${port}/room/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport const analyzePhrase = async(data) => {\r\n  return axios.post(`http://${requestIp}:${port}/analyze/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport const recognizeAudio = async(data) => {\r\n  return axios.post(`http://${requestIp}:${port}/recognize/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n}","import React from \"react\";\r\nimport { Card, Slider, Switch, Button, Popover } from \"antd\";\r\nimport { BulbOutlined, MinusCircleTwoTone } from \"@ant-design/icons\";\r\nimport { updateLightInfo, deleteLight, getLightInfo } from \"../Request\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\n\r\nconst Light = (props) => {\r\n  const [checked, setChecked] = React.useState(props.data.light_status);\r\n  const [brightness, setBrightness] = React.useState(props.data.brightness);\r\n  const [lightInfo, setLightInfo] = React.useState(props.data);\r\n  const [available, setAvailable] = React.useState(true);\r\n  const [lightColor, setLightColor] = React.useState(props.rgbColor);\r\n\r\n  const lightDelete = async (lightID) => {\r\n    await deleteLight(lightID);\r\n  };\r\n\r\n  const handleColorUpdate = () => {\r\n    updateLightInfo(\r\n      lightInfo.id,\r\n      JSON.stringify({ id: lightInfo.id, color: lightColor })\r\n    )\r\n    .then(res => {\r\n      setLightInfo(res.data);\r\n      //props.websocket.send(JSON.stringify(res.data))\r\n    })\r\n  }\r\n\r\n  const content = (\r\n    <HexColorPicker color={lightColor} onChange={setLightColor} onMouseUp={handleColorUpdate}/>\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    async function initialSetup() {\r\n      getLightInfo(props.data.id).then(res => {\r\n        setLightInfo(res.data);\r\n        setChecked(res.data.light_status);\r\n        setBrightness(res.data.brightness);\r\n        setLightColor(res.data.color);\r\n      });\r\n      \r\n    }\r\n    initialSetup()\r\n  }, [props.refresh]);\r\n\r\n  return (\r\n    <>\r\n      {available ? (\r\n        <Card\r\n          style={{\r\n            width: 200,\r\n            margin: \"20px 10px\",\r\n            height: \"330px\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n          title={\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <p style={{ margin: 0 }}>{lightInfo.name}</p>\r\n              {props.delete ? (\r\n                <Button\r\n                  size=\"small\"\r\n                  danger\r\n                  type=\"text\"\r\n                  icon={<MinusCircleTwoTone twoToneColor=\"#ff0000\" />}\r\n                  onClick={(e) => {\r\n                    lightDelete(lightInfo.id);\r\n                    setAvailable(false);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <BulbOutlined />\r\n              )}\r\n            </div>\r\n          }\r\n          bordered={false}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <h4 style={{ margin: 0 }}>Status</h4>\r\n            <Switch\r\n              checked={checked}\r\n              checkedChildren=\"ON\"\r\n              unCheckedChildren=\"OFF\"\r\n              onChange={(val) => {\r\n                updateLightInfo(\r\n                  lightInfo.id,\r\n                  JSON.stringify({ id: lightInfo.id, light_status: val, brightness: lightInfo.brightness })\r\n                )\r\n                .then(res => {\r\n                  setLightInfo(res.data);\r\n                  //props.websocket.send(JSON.stringify(res.data))\r\n                })\r\n                setChecked(val);\r\n              }}\r\n            />\r\n          </div>\r\n          {props.rgb ?\r\n            <div className=\"color-picker\">\r\n              <h4>Color</h4>\r\n              <Popover trigger=\"click\" content={content} placement=\"bottom\">\r\n                <div\r\n                  className=\"swatch\"\r\n                  style={{ backgroundColor: lightColor }}\r\n                />\r\n              </Popover>\r\n            </div>\r\n          : false}\r\n          <div>\r\n            <h4>Brightness</h4>\r\n            <Slider\r\n              disabled={!checked}\r\n              value={checked ? brightness : 0}\r\n              marks={{ 0: \"0%\", 100: \"100%\" }}\r\n              onChange={(val) => setBrightness(val)}\r\n              onAfterChange={(val) => {\r\n                updateLightInfo(\r\n                  lightInfo.id,\r\n                  JSON.stringify({ id: lightInfo.id, brightness: val })\r\n                )\r\n                .then(res => {\r\n                  setLightInfo(res.data);\r\n                  //props.websocket.send(JSON.stringify(res.data))\r\n                })\r\n                \r\n              }}\r\n            />\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        false\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Light;\r\n","import React from \"react\";\r\nimport { Card, Slider, Button } from \"antd\";\r\nimport {\r\n  CircularProgressbarWithChildren,\r\n  buildStyles,\r\n} from \"react-circular-progressbar\";\r\nimport { FireOutlined, MinusCircleTwoTone } from \"@ant-design/icons\";\r\nimport {\r\n  updateThermostatInfo,\r\n  getThermostatInfo,\r\n  deleteThermostat,\r\n} from \"../Request\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst Thermostat = (props) => {\r\n  const [thermostatInfo, setThermostatInfo] = React.useState(props.data);\r\n  const [tempSet, setTempSet] = React.useState(props.data.temperature_set);\r\n  const [available, setAvailable] = React.useState(true);\r\n\r\n  const thermostatDelete = async (thermostatID) => {\r\n    await deleteThermostat(thermostatID);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    async function initialSetup(){\r\n      let response = await getThermostatInfo(props.data.id);\r\n      setThermostatInfo(response.data);\r\n      setTempSet(response.data.temperature_set);\r\n    }\r\n    initialSetup()\r\n  }, [props.refresh]);\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      let response = await getThermostatInfo(props.data.id);\r\n      setThermostatInfo(response.data);\r\n      setTempSet(response.data.temperature_set);\r\n    }, 13000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {available ? (\r\n        <Card\r\n          title={\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <p style={{ margin: 0 }}>Thermostat</p>\r\n              {props.delete ? (\r\n                <Button\r\n                  size=\"small\"\r\n                  danger\r\n                  type=\"text\"\r\n                  icon={\r\n                    <MinusCircleTwoTone\r\n                      twoToneColor=\"#ff0000\"\r\n                      onClick={(e) => {\r\n                        thermostatDelete(thermostatInfo.id);\r\n                        setAvailable(false);\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              ) : (\r\n                <FireOutlined />\r\n              )}\r\n            </div>\r\n          }\r\n          bordered={false}\r\n          style={{\r\n            width: 200,\r\n            margin: \"20px 10px\",\r\n            height: \"330px\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <CircularProgressbarWithChildren\r\n            value={thermostatInfo.actual_temperature}\r\n            minValue=\"10\"\r\n            maxValue=\"30\"\r\n            circleRatio={0.75}\r\n            styles={buildStyles({\r\n              rotation: 1 / 2 + 1 / 8,\r\n              trailColor: \"#eee\",\r\n            })}\r\n          >\r\n            <p\r\n              style={{\r\n                fontSize: 20,\r\n                color: \"#3e98c7\",\r\n                textAlign: \"center\",\r\n                paddingTop: 20,\r\n              }}\r\n            >\r\n              <strong>\r\n                Current\r\n                <br />\r\n                {thermostatInfo.actual_temperature}°\r\n              </strong>\r\n            </p>\r\n          </CircularProgressbarWithChildren>\r\n          <h4 style={{ margin: 0 }}>Set temperature</h4>\r\n          <Slider\r\n            value={tempSet}\r\n            min={10}\r\n            max={30}\r\n            marks={{ 10: \"10\", 30: \"30\" }}\r\n            onChange={(val) => setTempSet(val)}\r\n            onAfterChange={(val) =>\r\n              updateThermostatInfo(\r\n                thermostatInfo.id,\r\n                JSON.stringify({ temperature_set: val })\r\n              )\r\n            }\r\n          />\r\n        </Card>\r\n      ) : (\r\n        false\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Thermostat;\r\n","import React from \"react\";\r\nimport { ReactMic } from \"@cleandersonlobo/react-mic\";\r\n\r\nimport { Button, Form, Modal, Input, message } from \"antd\";\r\n\r\nimport { recognizeAudio, analyzePhrase } from \"../Request\";\r\n\r\nconst CommandModal = (props) => {\r\n  const [loadingAnalyze, setLoadingAnalyze] = React.useState(false);\r\n\r\n  //record states\r\n  const [isRecording, setIsRecording] = React.useState(false);\r\n  const [isComputing, setIsComputing] = React.useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const { TextArea } = Input;\r\n\r\n  const audioRecognize = async (audio) => {\r\n    setIsComputing(true);\r\n    var fd = new FormData();\r\n    fd.append(\"audio\", audio.blob);\r\n    await recognizeAudio(fd).then((res) => {\r\n      console.log(res.data);\r\n      if(res.data.transcription){\r\n        form.setFieldsValue({\r\n          phrase: res.data.transcription,\r\n        });\r\n        setIsComputing(false);\r\n      }else if(res.data.error){\r\n        message.error(res.data.error)\r\n        setIsComputing(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAnalyze = async (values) => {\r\n    setLoadingAnalyze(true);\r\n    let res = await analyzePhrase(JSON.stringify({ phrase: values.phrase }));\r\n    if (res.data.ERROR) {\r\n      message.error(\"I didn't understand!\");\r\n    } else {\r\n      props.onVisibleChange(false);\r\n      if (res.data.roomID === props.currentRoom)\r\n        props.changeRoom(res.data.roomID);\r\n      else if (res.data.roomID === 0) props.changeRoom(props.currentRoom);\r\n      message.success(\"Command executed\");\r\n    }\r\n    setLoadingAnalyze(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Type a command to execute\"\r\n      visible={props.visible}\r\n      footer={false}\r\n      onCancel={(e) => {\r\n        !loadingAnalyze && props.onVisibleChange(false);\r\n      }}\r\n      bodyStyle={{ padding: \"24px\" }}\r\n      destroyOnClose=\"true\"\r\n    >\r\n      <Form id=\"analyzeForm\" onFinish={handleAnalyze} form={form}>\r\n        <Form.Item\r\n          name=\"phrase\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please insert a command to execute\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            rows={4}\r\n            allowClear=\"true\"\r\n            placeholder=\"e.g. Turn on Kitchen lights\"\r\n          />\r\n        </Form.Item>\r\n        <ReactMic\r\n          record={isRecording}\r\n          className=\"audio-wave\"\r\n          onStop={(audioRecorded) => audioRecognize(audioRecorded)}\r\n        />\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button\r\n            onClick={(e) => setIsRecording(!isRecording)}\r\n            type=\"primary\"\r\n            loading={isComputing}\r\n          >\r\n            {!isRecording ? \"Record\" : \"Stop Recording\"}\r\n          </Button>\r\n          <Form.Item\r\n            style={{\r\n              textAlign: \"right\",\r\n              marginRight: 10,\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"default\"\r\n              onClick={(e) => {\r\n                !loadingAnalyze && props.onVisibleChange(false);\r\n              }}\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loadingAnalyze}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CommandModal;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  getRooms,\r\n  getRoomByID,\r\n  addLight,\r\n  addThermostat,\r\n  addRoom,\r\n  deleteRoom,\r\n} from \"../Request\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  Spin,\r\n  Button,\r\n  Drawer,\r\n  Form,\r\n  Select,\r\n  Tabs,\r\n  Input,\r\n  message,\r\n  Switch,\r\n} from \"antd\";\r\n\r\nimport \"../styles/dashboard.css\";\r\n\r\nimport {\r\n  MenuOutlined,\r\n  HomeOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  MinusCircleTwoTone,\r\n  MessageOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport Light from \"../components/Light\";\r\nimport Thermostat from \"../components/Thermostat\";\r\nimport CommandModal from \"../components/CommandModal\";\r\n\r\nconst { Option } = Select;\r\nconst { Header, Sider, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Dashboard = () => {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n  const [available, setAvailable] = React.useState(false);\r\n  const [currentRoomID, setCurrentRoomID] = React.useState(1);\r\n  const [rooms, setRooms] = React.useState([]);\r\n  const [roomData, setRoomData] = React.useState({});\r\n  const [activeTab, setActiveTab] = React.useState(1);\r\n  const [addCompOpen, setAddCompOpen] = React.useState(false);\r\n  const [delComp, setDelComp] = React.useState(false);\r\n  const [display, setDisplay] = React.useState(false);\r\n  const [showAnalyze, setShowAnalyze] = React.useState(false);\r\n  const [refresh, setRefresh] = React.useState(false);\r\n  const [websocket, setWebsocket] = React.useState({})\r\n  const [webSocketData, setWebSocketData] = React.useState({})\r\n  \r\n  const tabs = { 1: \"addRoomForm\", 2: \"addCompForm\" };\r\n  const webSocketPort = 9000;\r\n\r\n  const refreshRooms = async () => {\r\n    let response = await getRooms();\r\n    setRooms(response.data);\r\n    return response;\r\n  };\r\n\r\n  const roomDelete = async (roomID) => {\r\n    await deleteRoom(roomID);\r\n    await refreshRooms();\r\n  };\r\n\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const handleTabs = (id) => {\r\n    setActiveTab(id);\r\n  };\r\n\r\n  const changeRoom = async (roomID) => {\r\n    let tmp = await getRoomByID(roomID);\r\n    setRoomData(tmp.data);\r\n    setCurrentRoomID(tmp.data.id);\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    var requestError = false;\r\n    switch (values.device) {\r\n      case \"light\":\r\n        await addLight(\r\n          JSON.stringify({ room: values.room, name: values.lightName, isRgb: values.isRgb})\r\n        );\r\n        break;\r\n      case \"thermostat\":\r\n        await addThermostat(JSON.stringify({ room: values.room })).catch(\r\n          (error) => {\r\n            message.error(\"Another thermostat already exists!\");\r\n            requestError = true;\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (values.room === currentRoomID) {\r\n      changeRoom(values.room);\r\n    }\r\n    if (!requestError) setAddCompOpen(false);\r\n    setDisplay(false);\r\n  };\r\n\r\n  const addRoomHandle = async (values) => {\r\n    var requestError = false;\r\n    await addRoom(JSON.stringify({ name: values.room.toLowerCase() })).catch(\r\n      (error) => {\r\n        message.error(\"A room with the same name already exists!\");\r\n        requestError = true;\r\n      }\r\n    );\r\n    await refreshRooms();\r\n    if (!requestError) setAddCompOpen(false);\r\n    setDisplay(false);\r\n  };\r\n\r\n  const renderRoomComponents = (component) => {\r\n    if (Object.keys(roomData).length !== 0 && roomData.constructor === Object) {\r\n      switch (component) {\r\n        case \"light\":\r\n          return roomData.lights.map((item) => {\r\n            return (\r\n              <Light\r\n                key={item.id}\r\n                data={item}\r\n                delete={delComp}\r\n                refresh={refresh}\r\n                rgb={item.isRgb}\r\n                rgbColor = {item.color}\r\n                websocketData={webSocketData}\r\n              />\r\n            );\r\n          });\r\n        case \"thermostat\":\r\n          return roomData.thermostats.map((item) => {\r\n            return (\r\n              <Thermostat\r\n                key={item.id}\r\n                data={item}\r\n                delete={delComp}\r\n                refresh={refresh}\r\n              />\r\n            );\r\n          });\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const openWebSocket = () => {\r\n\r\n    var ws = new WebSocket(`ws://${process.env.REACT_APP_REQUEST_IP}:${webSocketPort}/ws/light/`)\r\n    ws.onopen = (e) => {\r\n      console.log(\"WebSocket connected.\")\r\n      setWebsocket(ws)\r\n      message.success(\"WebSocket connected.\")\r\n    }\r\n\r\n    ws.onclose = (e) => {\r\n      if (e.code !== 1000) {\r\n        console.log(\"WebSocket closed. Reconnecting...\")\r\n        message.warning(\"WebSocket closed. Reconnecting...\")\r\n        setTimeout(() => { openWebSocket() }, 5000)\r\n      }\r\n    }\r\n\r\n    ws.onmessage = (e) => {\r\n      var received = JSON.parse(e.data).message\r\n      console.log(\"Received from Socket: \", received)\r\n      setWebSocketData(received);\r\n    }\r\n    \r\n    ws.onerror = (error) => {\r\n      console.log(error)\r\n      ws.close()\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    async function initialSetup() {\r\n      let tmpRooms = await refreshRooms();\r\n      openWebSocket()\r\n      if (tmpRooms.data.length > 0) {\r\n        setCurrentRoomID(tmpRooms.data[0].id);\r\n        await changeRoom(tmpRooms.data[0].id);\r\n      }\r\n      setAvailable(true);\r\n    }\r\n    initialSetup();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {available === false ? (\r\n        <Spin size=\"large\" className=\"loadBox\" />\r\n      ) : (\r\n        <Layout style={{ height: \"100%\", flexWrap: \"wrap\" }}>\r\n          <Sider\r\n            trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            collapsedWidth={0}\r\n            style={{ overflow: \"auto\" }}\r\n          >\r\n            <div className=\"sider-header\">\r\n              <HomeOutlined style={{ fontSize: \"25px\", color: \"#ffffff\" }} />\r\n              <p\r\n                style={{\r\n                  color: \"white\",\r\n                  padding: \"0px 10px\",\r\n                  margin: 0,\r\n                  fontSize: \"bold\",\r\n                }}\r\n              >\r\n                <strong>Rooms</strong>\r\n              </p>\r\n            </div>\r\n            <Menu\r\n              theme=\"dark\"\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[String(currentRoomID)]}\r\n              selectable={!delComp}\r\n              onClick={(e) => {\r\n                if (!delComp) {\r\n                  changeRoom(e.key);\r\n                  setDelComp(false);\r\n                }\r\n              }}\r\n            >\r\n              {rooms.length > 0\r\n                ? rooms.map((room) => {\r\n                  return (\r\n                    <Menu.Item key={room.id} className=\"room-menu-item\">\r\n                      {room.name.charAt(0).toUpperCase() + room.name.slice(1)}\r\n                      {delComp ? (\r\n                        <Button\r\n                          size=\"small\"\r\n                          danger\r\n                          type=\"text\"\r\n                          icon={\r\n                            <MinusCircleTwoTone\r\n                              twoToneColor=\"#ff0000\"\r\n                              style={{ marginRight: 0 }}\r\n                            />\r\n                          }\r\n                          onClick={(e) => {\r\n                            roomDelete(room.id);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        false\r\n                      )}\r\n                    </Menu.Item>\r\n                  );\r\n                })\r\n                : false}\r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-header\">\r\n              {React.createElement(MenuOutlined, {\r\n                className: \"trigger\",\r\n                onClick: toggleCollapsed,\r\n              })}\r\n              <h2 style={{ fontWeight: \"bold\" }}>\r\n                {Object.keys(roomData).length !== 0 &&\r\n                  roomData.constructor === Object\r\n                  ? roomData.name.charAt(0).toUpperCase() +\r\n                  roomData.name.slice(1)\r\n                  : false}\r\n              </h2>\r\n            </Header>\r\n            <Content className=\"site-layout-content\">\r\n              {renderRoomComponents(\"light\")}\r\n              {renderRoomComponents(\"thermostat\")}\r\n              <CommandModal\r\n                visible={showAnalyze}\r\n                onVisibleChange={setShowAnalyze}\r\n                changeRoom={changeRoom}\r\n                currentRoom={currentRoomID}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                size={\"large\"}\r\n                className=\"commandBtn\"\r\n                onClick={(e) => setShowAnalyze(true)}\r\n              >\r\n                <MessageOutlined />\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                size={\"large\"}\r\n                className=\"delBtn\"\r\n                danger\r\n                onClick={(e) => setDelComp(!delComp)}\r\n              >\r\n                {delComp ? <CloseOutlined /> : <DeleteOutlined />}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                size={\"large\"}\r\n                className=\"addBtn\"\r\n                onClick={(e) => {\r\n                  setAddCompOpen(true);\r\n                  setDelComp(false);\r\n                }}\r\n              >\r\n                <PlusOutlined />\r\n              </Button>\r\n              <Drawer\r\n                width={360}\r\n                onClose={(e) => {\r\n                  setAddCompOpen(false);\r\n                  setDisplay(false);\r\n                }}\r\n                visible={addCompOpen}\r\n                destroyOnClose=\"true\"\r\n                bodyStyle={{ paddingTop: 5 }}\r\n                footer={\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"right\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      onClick={(e) => {\r\n                        setAddCompOpen(false);\r\n                        setDisplay(false);\r\n                      }}\r\n                      style={{ marginRight: 8 }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      form={tabs[activeTab]}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                }\r\n              >\r\n                <Tabs defaultActiveKey=\"1\" onChange={handleTabs}>\r\n                  <TabPane tab=\"Add room\" key=\"1\">\r\n                    <Form\r\n                      layout=\"vertical\"\r\n                      onFinish={addRoomHandle}\r\n                      onFinishFailed={(e) => setAddCompOpen(true)}\r\n                      id=\"addRoomForm\"\r\n                    >\r\n                      <Form.Item\r\n                        name=\"room\"\r\n                        label=\"Room\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please choose a name for your room\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Room name\" />\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </TabPane>\r\n                  <TabPane tab=\"Add device\" key=\"2\">\r\n                    <Form\r\n                      layout=\"vertical\"\r\n                      onFinish={handleSubmit}\r\n                      onFinishFailed={(e) => setAddCompOpen(true)}\r\n                      id=\"addCompForm\"\r\n                    >\r\n                      <Form.Item\r\n                        name=\"room\"\r\n                        label=\"Room\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select a room to add\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select placeholder=\"Select the room\">\r\n                          {rooms.map((room) => {\r\n                            return (\r\n                              <Option key={room.id} value={room.id}>\r\n                                {room.name.charAt(0).toUpperCase() +\r\n                                  room.name.slice(1)}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"device\"\r\n                        label=\"Smart device type\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select a device to add\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          placeholder=\"Select the smart device type\"\r\n                          onChange={(value) => {\r\n                            value === \"light\"\r\n                              ? setDisplay(true)\r\n                              : setDisplay(false);\r\n                          }}\r\n                        >\r\n                          <Option value=\"light\">Light</Option>\r\n                          <Option value=\"thermostat\">Thermostat</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                      {display ? (\r\n                        <>\r\n                          <Form.Item\r\n                            name=\"lightName\"\r\n                            label=\"Light Name\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please choose a name for your light\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input placeholder=\"Light name\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            name=\"isRgb\"\r\n                            label=\"Is RGB?\"\r\n                          >\r\n                            <Switch/>\r\n                          </Form.Item>\r\n                        </>\r\n                      ) : (\r\n                        false\r\n                      )}\r\n                    </Form>\r\n                  </TabPane>\r\n                </Tabs>\r\n              </Drawer>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import 'antd/dist/antd.css';\nimport Dashboard from './pages/Dashboard'\nimport './App.css'\n\nfunction App() {\n  return(\n    <Dashboard />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}