{"ast":null,"code":"import axios from 'axios';\nconst requestIp = '128.116.170.243';\nexport const getRooms = async () => {\n  let res = await axios.get(`http://${requestIp}:9000/room/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const getRoomByID = async id => {\n  let res = await axios.get(`http://${requestIp}:9000/room/${id}/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const updateThermostatInfo = async (id, data) => {\n  let res = await axios.patch(`http://${requestIp}:9000/thermostat/${id}/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const updateLightInfo = async (id, data) => {\n  let res = await axios.patch(`http://${requestIp}:9000/light/${id}/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const getThermostatInfo = async id => {\n  let res = await axios.get(`http://${requestIp}:9000/thermostat/${id}/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const getLightInfo = async id => {\n  let res = await axios.get(`http://${requestIp}:9000/light/${id}/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const deleteRoom = async id => {\n  let res = await axios.delete(`http://${requestIp}:9000/room/${id}/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const deleteThermostat = async id => {\n  let res = await axios.delete(`http://${requestIp}:9000/thermostat/${id}/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const deleteLight = async id => {\n  let res = await axios.delete(`http://${requestIp}:9000/light/${id}/`).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const addLight = async data => {\n  let res = await axios.post(`http://${requestIp}:9000/light/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const addThermostat = async data => {\n  let res = await axios.post(`http://${requestIp}:9000/thermostat/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const addRoom = async data => {\n  let res = await axios.post(`http://${requestIp}:9000/room/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const analyzePhrase = async data => {\n  let res = await axios.post(`http://${requestIp}:9000/analyze/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};\nexport const recognizeAudio = async data => {\n  let res = await axios.post(`http://${requestIp}:9000/recognize/`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response;\n  });\n  return res;\n};","map":{"version":3,"sources":["C:/Users/Anto/Desktop/Things/stage/task-2 stage/automationui/src/Request.js"],"names":["axios","requestIp","getRooms","res","get","then","response","getRoomByID","id","updateThermostatInfo","data","patch","headers","updateLightInfo","getThermostatInfo","getLightInfo","deleteRoom","delete","deleteThermostat","deleteLight","addLight","post","addThermostat","addRoom","analyzePhrase","recognizeAudio"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst requestIp = '128.116.170.243'\r\n\r\n\r\nexport const getRooms = async () => {\r\n  let res = await axios.get(`http://${requestIp}:9000/room/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getRoomByID = async (id) => {\r\n  let res = await axios.get(`http://${requestIp}:9000/room/${id}/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const updateThermostatInfo = async (id, data) => {\r\n  let res = await axios.patch(`http://${requestIp}:9000/thermostat/${id}/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const updateLightInfo = async (id, data) => {\r\n  let res = await axios.patch(`http://${requestIp}:9000/light/${id}/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getThermostatInfo = async (id) => {\r\n  let res = await axios.get(`http://${requestIp}:9000/thermostat/${id}/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getLightInfo = async (id) => {\r\n  let res = await axios.get(`http://${requestIp}:9000/light/${id}/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const deleteRoom = async (id) => {\r\n  let res = await axios.delete(`http://${requestIp}:9000/room/${id}/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const deleteThermostat = async (id) => {\r\n  let res = await axios.delete(`http://${requestIp}:9000/thermostat/${id}/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const deleteLight = async (id) => {\r\n  let res = await axios.delete(`http://${requestIp}:9000/light/${id}/`)\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const addLight = async(data) => {\r\n  let res = await axios.post(`http://${requestIp}:9000/light/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const addThermostat = async(data) => {\r\n  let res = await axios.post(`http://${requestIp}:9000/thermostat/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const addRoom = async(data) => {\r\n  let res = await axios.post(`http://${requestIp}:9000/room/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const analyzePhrase = async(data) => {\r\n  let res = await axios.post(`http://${requestIp}:9000/analyze/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}\r\n\r\nexport const recognizeAudio = async(data) => {\r\n  let res = await axios.post(`http://${requestIp}:9000/recognize/`, data, {\r\n    headers: {\r\n      'Content-Type' : 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n    return response\r\n  })\r\n  return res\r\n}"]},"metadata":{},"sourceType":"module"}