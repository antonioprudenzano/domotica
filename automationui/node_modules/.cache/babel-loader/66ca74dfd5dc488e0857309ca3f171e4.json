{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anto\\\\Desktop\\\\Things\\\\stage\\\\task-2 stage\\\\automationui\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Light from \"../components/Light\";\nimport Thermostat from \"../components/Thermostat\";\nimport { recognizeAudio, getRooms, getRoomByID, addLight, addThermostat, addRoom, deleteRoom, analyzePhrase } from \"../Request\";\nimport { Layout, Menu, Spin, Button, Drawer, Form, Select, Tabs, Input, message, Modal } from \"antd\";\nimport DeviceDrawer from '../components/DeviceDrawer';\nimport { ReactMic } from \"react-mic\";\nimport \"../styles/dashboard.css\";\nimport { MenuOutlined, HomeOutlined, PlusOutlined, DeleteOutlined, CloseOutlined, MinusCircleTwoTone, MessageOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Header,\n  Sider,\n  Content\n} = Layout;\nconst {\n  TabPane\n} = Tabs;\n\nconst Dashboard = () => {\n  _s();\n\n  const [collapsed, setCollapsed] = React.useState(false);\n  const [available, setAvailable] = React.useState(false);\n  const [currentRoomID, setCurrentRoomID] = React.useState();\n  const [rooms, setRooms] = React.useState([]);\n  const [roomData, setRoomData] = React.useState({});\n  const [activeTab, setActiveTab] = React.useState(1);\n  const [addCompOpen, setAddCompOpen] = React.useState(false);\n  const [delComp, setDelComp] = React.useState(false);\n  const [display, setDisplay] = React.useState(false);\n  const [showAnalyze, setShowAnalyze] = React.useState(false);\n  const [loadingAnalyze, setLoadingAnalyze] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(false); //record states\n\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [isComputing, setIsComputing] = React.useState(false);\n  const tabs = {\n    1: \"addRoomForm\",\n    2: \"addCompForm\"\n  };\n  const [form] = Form.useForm();\n\n  const refreshRooms = async () => {\n    let response = await getRooms();\n    setRooms(response.data);\n    return response;\n  };\n\n  const roomDelete = async roomID => {\n    await deleteRoom(roomID);\n    await refreshRooms();\n  };\n\n  const toggleCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const handleTabs = id => {\n    setActiveTab(id);\n  };\n\n  const changeRoom = async roomID => {\n    let tmp = await getRoomByID(roomID);\n    setRoomData(tmp.data);\n    setCurrentRoomID(tmp.data.id);\n    setRefresh(!refresh);\n  };\n\n  const handleAnalyze = async values => {\n    setLoadingAnalyze(true);\n    let res = await analyzePhrase(JSON.stringify({\n      phrase: values.phrase\n    }));\n\n    if (res.data.ERROR) {\n      message.error(\"I didn't understand!\");\n    } else {\n      setShowAnalyze(false);\n      if (res.data.roomID === currentRoomID) changeRoom(res.data.roomID);else if (res.data.roomID === 0) changeRoom(currentRoomID);\n      message.success(\"Command executed\");\n    }\n\n    setLoadingAnalyze(false);\n  };\n\n  const handleSubmit = async values => {\n    console.log(values);\n    var requestError = false;\n\n    switch (values.device) {\n      case \"light\":\n        await addLight(JSON.stringify({\n          room: values.room,\n          name: values.lightName\n        }));\n        break;\n\n      case \"thermostat\":\n        await addThermostat(JSON.stringify({\n          room: values.room\n        })).catch(error => {\n          message.error(\"Another thermostat already exists!\");\n          requestError = true;\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    if (values.room === currentRoomID) {\n      changeRoom(values.room);\n    }\n\n    if (!requestError) setAddCompOpen(false);\n    setDisplay(false);\n  };\n\n  const addRoomHandle = async values => {\n    var requestError = false;\n    await addRoom(JSON.stringify({\n      name: values.room.toLowerCase()\n    })).catch(error => {\n      message.error(\"A room with the same name already exists!\");\n      requestError = true;\n    });\n    await refreshRooms();\n    if (!requestError) setAddCompOpen(false);\n    setDisplay(false);\n  };\n\n  const renderRoomComponents = component => {\n    if (Object.keys(roomData).length !== 0 && roomData.constructor === Object) {\n      switch (component) {\n        case \"light\":\n          return roomData.lights.map(item => {\n            return /*#__PURE__*/_jsxDEV(Light, {\n              data: item,\n              delete: delComp,\n              refresh: refresh\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this);\n          });\n\n        case \"thermostat\":\n          return roomData.thermostats.map(item => {\n            return /*#__PURE__*/_jsxDEV(Thermostat, {\n              data: item,\n              delete: delComp,\n              refresh: refresh\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this);\n          });\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const audioRecognize = async audio => {\n    setIsComputing(true);\n    console.log(audio);\n    var fd = new FormData();\n    fd.append(\"audio\", audio.blob);\n    await recognizeAudio(fd).then(res => {\n      console.log(res.data);\n      form.setFieldsValue({\n        phrase: res.data.transcription\n      });\n      setIsComputing(false);\n    });\n  };\n\n  React.useEffect(() => {\n    async function initialSetup() {\n      let tmpRooms = await refreshRooms();\n\n      if (tmpRooms.data.length > 0) {\n        setCurrentRoomID(tmpRooms.data[0].id);\n        await changeRoom(tmpRooms.data[0].id);\n      }\n\n      setAvailable(true);\n    }\n\n    initialSetup();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: available === false ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      className: \"loadBox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n      style: {\n        height: \"100%\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sider, {\n        trigger: null,\n        collapsible: true,\n        collapsed: collapsed,\n        collapsedWidth: 0,\n        style: {\n          overflow: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20px 24px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"flex-end\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(HomeOutlined, {\n            style: {\n              fontSize: \"25px\",\n              color: \"#ffffff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\",\n              padding: \"0px 10px\",\n              margin: 0,\n              fontSize: \"bold\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Rooms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          theme: \"dark\",\n          mode: \"inline\",\n          defaultSelectedKeys: [String(currentRoomID)],\n          selectable: !delComp,\n          onClick: e => {\n            if (!delComp) {\n              changeRoom(e.key);\n              setDelComp(false);\n            }\n          },\n          children: rooms.length > 0 ? rooms.map(room => {\n            return /*#__PURE__*/_jsxDEV(Menu.Item, {\n              style: {\n                margin: 0,\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              children: [room.name.charAt(0).toUpperCase() + room.name.slice(1), delComp ? /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                danger: true,\n                type: \"text\",\n                icon: /*#__PURE__*/_jsxDEV(MinusCircleTwoTone, {\n                  twoToneColor: \"#ff0000\",\n                  style: {\n                    marginRight: 0\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 31\n                }, this),\n                onClick: e => {\n                  roomDelete(room.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 27\n              }, this) : false]\n            }, room.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 23\n            }, this);\n          }) : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        className: \"site-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"site-layout-background\",\n          style: {\n            padding: 0,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/React.createElement(collapsed ? MenuOutlined : MenuOutlined, {\n            className: \"trigger\",\n            onClick: toggleCollapsed\n          }), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: Object.keys(roomData).length !== 0 && roomData.constructor === Object ? roomData.name.charAt(0).toUpperCase() + roomData.name.slice(1) : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          className: \"site-layout-background\",\n          style: {\n            margin: \"16px 16px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            background: \"#f0f2f5\",\n            flexWrap: \"wrap\",\n            overflow: \"auto\"\n          },\n          children: [renderRoomComponents(\"light\"), renderRoomComponents(\"thermostat\"), /*#__PURE__*/_jsxDEV(Modal, {\n            title: \"Type a command to execute\",\n            visible: showAnalyze,\n            footer: false,\n            onCancel: e => {\n              !loadingAnalyze && setShowAnalyze(false);\n            },\n            bodyStyle: {\n              padding: \"24px\"\n            },\n            destroyOnClose: \"true\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              id: \"analyzeForm\",\n              onFinish: handleAnalyze,\n              form: form,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"phrase\",\n                rules: [{\n                  required: true,\n                  message: \"Please insert a command to execute\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(TextArea, {\n                  rows: 4,\n                  allowClear: \"true\",\n                  placeholder: \"e.g. Turn on Kitchen lights\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ReactMic, {\n                record: isRecording,\n                className: \"audio-wave\",\n                mimeType: \"audio/webm\",\n                onStop: audioRecorded => audioRecognize(audioRecorded),\n                noiseSuppression: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"space-between\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: e => setIsRecording(!isRecording),\n                  type: \"primary\",\n                  loading: isComputing,\n                  children: !isRecording ? \"Record\" : \"Stop Recording\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  style: {\n                    textAlign: \"right\",\n                    marginRight: 10,\n                    marginBottom: 0\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    type: \"default\",\n                    onClick: e => {\n                      !loadingAnalyze && setShowAnalyze(false);\n                    },\n                    style: {\n                      marginRight: 10\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"primary\",\n                    htmlType: \"submit\",\n                    loading: loadingAnalyze,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"circle\",\n            size: \"large\",\n            className: \"commandBtn\",\n            onClick: e => setShowAnalyze(true),\n            children: /*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"circle\",\n            size: \"large\",\n            className: \"delBtn\",\n            danger: true,\n            onClick: e => setDelComp(!delComp),\n            children: delComp ? /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"circle\",\n            size: \"large\",\n            className: \"addBtn\",\n            onClick: e => {\n              setAddCompOpen(true);\n              setDelComp(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeviceDrawer, {\n            open: open\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"JNuYGV4ZuSOTLYgjHHK603UQUxg=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Anto/Desktop/Things/stage/task-2 stage/automationui/src/pages/Dashboard.js"],"names":["React","Light","Thermostat","recognizeAudio","getRooms","getRoomByID","addLight","addThermostat","addRoom","deleteRoom","analyzePhrase","Layout","Menu","Spin","Button","Drawer","Form","Select","Tabs","Input","message","Modal","DeviceDrawer","ReactMic","MenuOutlined","HomeOutlined","PlusOutlined","DeleteOutlined","CloseOutlined","MinusCircleTwoTone","MessageOutlined","TextArea","Option","Header","Sider","Content","TabPane","Dashboard","collapsed","setCollapsed","useState","available","setAvailable","currentRoomID","setCurrentRoomID","rooms","setRooms","roomData","setRoomData","activeTab","setActiveTab","addCompOpen","setAddCompOpen","delComp","setDelComp","display","setDisplay","showAnalyze","setShowAnalyze","loadingAnalyze","setLoadingAnalyze","refresh","setRefresh","isRecording","setIsRecording","isComputing","setIsComputing","tabs","form","useForm","refreshRooms","response","data","roomDelete","roomID","toggleCollapsed","handleTabs","id","changeRoom","tmp","handleAnalyze","values","res","JSON","stringify","phrase","ERROR","error","success","handleSubmit","console","log","requestError","device","room","name","lightName","catch","addRoomHandle","toLowerCase","renderRoomComponents","component","Object","keys","length","constructor","lights","map","item","thermostats","audioRecognize","audio","fd","FormData","append","blob","then","setFieldsValue","transcription","useEffect","initialSetup","tmpRooms","height","flexWrap","overflow","padding","flexDirection","alignItems","fontSize","color","margin","String","e","key","justifyContent","charAt","toUpperCase","slice","marginRight","createElement","className","onClick","fontWeight","background","required","audioRecorded","textAlign","marginBottom","open"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Light from \"../components/Light\";\r\nimport Thermostat from \"../components/Thermostat\";\r\nimport {\r\n  recognizeAudio,\r\n  getRooms,\r\n  getRoomByID,\r\n  addLight,\r\n  addThermostat,\r\n  addRoom,\r\n  deleteRoom,\r\n  analyzePhrase,\r\n} from \"../Request\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  Spin,\r\n  Button,\r\n  Drawer,\r\n  Form,\r\n  Select,\r\n  Tabs,\r\n  Input,\r\n  message,\r\n  Modal,\r\n} from \"antd\";\r\nimport DeviceDrawer from '../components/DeviceDrawer'\r\nimport { ReactMic } from \"react-mic\";\r\n\r\nimport \"../styles/dashboard.css\";\r\n\r\nimport {\r\n  MenuOutlined,\r\n  HomeOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  MinusCircleTwoTone,\r\n  MessageOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst { Header, Sider, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Dashboard = () => {\r\n  \r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n  const [available, setAvailable] = React.useState(false);\r\n  const [currentRoomID, setCurrentRoomID] = React.useState();\r\n  const [rooms, setRooms] = React.useState([]);\r\n  const [roomData, setRoomData] = React.useState({});\r\n  const [activeTab, setActiveTab] = React.useState(1);\r\n  const [addCompOpen, setAddCompOpen] = React.useState(false);\r\n  const [delComp, setDelComp] = React.useState(false);\r\n  const [display, setDisplay] = React.useState(false);\r\n  const [showAnalyze, setShowAnalyze] = React.useState(false);\r\n  const [loadingAnalyze, setLoadingAnalyze] = React.useState(false);\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  //record states\r\n  const [isRecording, setIsRecording] = React.useState(false);\r\n  const [isComputing, setIsComputing] = React.useState(false);\r\n\r\n  const tabs = { 1: \"addRoomForm\", 2: \"addCompForm\" };\r\n  const [form] = Form.useForm();\r\n\r\n  const refreshRooms = async () => {\r\n    let response = await getRooms();\r\n    setRooms(response.data);\r\n    return response;\r\n  };\r\n\r\n  const roomDelete = async (roomID) => {\r\n    await deleteRoom(roomID);\r\n    await refreshRooms();\r\n  };\r\n\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const handleTabs = (id) => {\r\n    setActiveTab(id);\r\n  };\r\n\r\n  const changeRoom = async (roomID) => {\r\n    let tmp = await getRoomByID(roomID);\r\n    setRoomData(tmp.data);\r\n    setCurrentRoomID(tmp.data.id);\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const handleAnalyze = async (values) => {\r\n    setLoadingAnalyze(true);\r\n    let res = await analyzePhrase(JSON.stringify({ phrase: values.phrase }));\r\n    if (res.data.ERROR) {\r\n      message.error(\"I didn't understand!\");\r\n    } else {\r\n      setShowAnalyze(false);\r\n      if (res.data.roomID === currentRoomID) changeRoom(res.data.roomID);\r\n      else if (res.data.roomID === 0) changeRoom(currentRoomID);\r\n      message.success(\"Command executed\");\r\n    }\r\n    setLoadingAnalyze(false);\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    console.log(values);\r\n    var requestError = false;\r\n    switch (values.device) {\r\n      case \"light\":\r\n        await addLight(\r\n          JSON.stringify({ room: values.room, name: values.lightName })\r\n        );\r\n        break;\r\n      case \"thermostat\":\r\n        await addThermostat(JSON.stringify({ room: values.room })).catch(\r\n          (error) => {\r\n            message.error(\"Another thermostat already exists!\");\r\n            requestError = true;\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (values.room === currentRoomID) {\r\n      changeRoom(values.room);\r\n    }\r\n    if (!requestError) setAddCompOpen(false);\r\n    setDisplay(false);\r\n  };\r\n\r\n  const addRoomHandle = async (values) => {\r\n    var requestError = false;\r\n    await addRoom(JSON.stringify({ name: values.room.toLowerCase() })).catch(\r\n      (error) => {\r\n        message.error(\"A room with the same name already exists!\");\r\n        requestError = true;\r\n      }\r\n    );\r\n    await refreshRooms();\r\n    if (!requestError) setAddCompOpen(false);\r\n    setDisplay(false);\r\n  };\r\n\r\n  const renderRoomComponents = (component) => {\r\n    if (Object.keys(roomData).length !== 0 && roomData.constructor === Object) {\r\n      switch (component) {\r\n        case \"light\":\r\n          return roomData.lights.map((item) => {\r\n            return (\r\n              <Light\r\n                key={item.id}\r\n                data={item}\r\n                delete={delComp}\r\n                refresh={refresh}\r\n              />\r\n            );\r\n          });\r\n        case \"thermostat\":\r\n          return roomData.thermostats.map((item) => {\r\n            return (\r\n              <Thermostat\r\n                key={item.id}\r\n                data={item}\r\n                delete={delComp}\r\n                refresh={refresh}\r\n              />\r\n            );\r\n          });\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const audioRecognize = async (audio) => {\r\n    setIsComputing(true);\r\n    console.log(audio);\r\n    var fd = new FormData();\r\n    fd.append(\"audio\", audio.blob);\r\n    await recognizeAudio(fd).then((res) => {\r\n      console.log(res.data);\r\n      form.setFieldsValue({\r\n        phrase: res.data.transcription,\r\n      });\r\n      setIsComputing(false);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    async function initialSetup() {\r\n      let tmpRooms = await refreshRooms();\r\n      if (tmpRooms.data.length > 0) {\r\n        setCurrentRoomID(tmpRooms.data[0].id);\r\n        await changeRoom(tmpRooms.data[0].id);\r\n      }\r\n      setAvailable(true);\r\n    }\r\n    initialSetup();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {available === false ? (\r\n        <Spin size=\"large\" className=\"loadBox\" />\r\n      ) : (\r\n        <Layout style={{ height: \"100%\", flexWrap: \"wrap\" }}>\r\n          <Sider\r\n            trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            collapsedWidth={0}\r\n            style={{ overflow: \"auto\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: \"20px 24px\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"flex-end\",\r\n              }}\r\n            >\r\n              <HomeOutlined style={{ fontSize: \"25px\", color: \"#ffffff\" }} />\r\n              <p\r\n                style={{\r\n                  color: \"white\",\r\n                  padding: \"0px 10px\",\r\n                  margin: 0,\r\n                  fontSize: \"bold\",\r\n                }}\r\n              >\r\n                <strong>Rooms</strong>\r\n              </p>\r\n            </div>\r\n            <Menu\r\n              theme=\"dark\"\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[String(currentRoomID)]}\r\n              selectable={!delComp}\r\n              onClick={(e) => {\r\n                if (!delComp) {\r\n                  changeRoom(e.key);\r\n                  setDelComp(false);\r\n                }\r\n              }}\r\n            >\r\n              {rooms.length > 0\r\n                ? rooms.map((room) => {\r\n                    return (\r\n                      <Menu.Item\r\n                        key={room.id}\r\n                        style={{\r\n                          margin: 0,\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        {room.name.charAt(0).toUpperCase() + room.name.slice(1)}\r\n                        {delComp ? (\r\n                          <Button\r\n                            size=\"small\"\r\n                            danger\r\n                            type=\"text\"\r\n                            icon={\r\n                              <MinusCircleTwoTone\r\n                                twoToneColor=\"#ff0000\"\r\n                                style={{ marginRight: 0 }}\r\n                              />\r\n                            }\r\n                            onClick={(e) => {\r\n                              roomDelete(room.id);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          false\r\n                        )}\r\n                      </Menu.Item>\r\n                    );\r\n                  })\r\n                : false}\r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            <Header\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 0,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {React.createElement(collapsed ? MenuOutlined : MenuOutlined, {\r\n                className: \"trigger\",\r\n                onClick: toggleCollapsed,\r\n              })}\r\n              <h2 style={{ fontWeight: \"bold\" }}>\r\n                {Object.keys(roomData).length !== 0 &&\r\n                roomData.constructor === Object\r\n                  ? roomData.name.charAt(0).toUpperCase() +\r\n                    roomData.name.slice(1)\r\n                  : false}\r\n              </h2>\r\n            </Header>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                margin: \"16px 16px\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                background: \"#f0f2f5\",\r\n                flexWrap: \"wrap\",\r\n                overflow: \"auto\",\r\n              }}\r\n            >\r\n              {renderRoomComponents(\"light\")}\r\n              {renderRoomComponents(\"thermostat\")}\r\n              <Modal\r\n                title=\"Type a command to execute\"\r\n                visible={showAnalyze}\r\n                footer={false}\r\n                onCancel={(e) => {\r\n                  !loadingAnalyze && setShowAnalyze(false);\r\n                }}\r\n                bodyStyle={{ padding: \"24px\" }}\r\n                destroyOnClose=\"true\"\r\n              >\r\n                <Form id=\"analyzeForm\" onFinish={handleAnalyze} form={form}>\r\n                  <Form.Item\r\n                    name=\"phrase\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please insert a command to execute\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <TextArea\r\n                      rows={4}\r\n                      allowClear=\"true\"\r\n                      placeholder=\"e.g. Turn on Kitchen lights\"\r\n                    />\r\n                  </Form.Item>\r\n                  <ReactMic\r\n                    record={isRecording}\r\n                    className=\"audio-wave\"\r\n                    mimeType=\"audio/webm\"\r\n                    onStop={(audioRecorded) => audioRecognize(audioRecorded)}\r\n                    noiseSuppression={true}\r\n                  />\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Button\r\n                      onClick={(e) => setIsRecording(!isRecording)}\r\n                      type=\"primary\"\r\n                      loading={isComputing}\r\n                    >\r\n                      {!isRecording ? \"Record\" : \"Stop Recording\"}\r\n                    </Button>\r\n                    <Form.Item\r\n                      style={{\r\n                        textAlign: \"right\",\r\n                        marginRight: 10,\r\n                        marginBottom: 0,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        type=\"default\"\r\n                        onClick={(e) => {\r\n                          !loadingAnalyze && setShowAnalyze(false);\r\n                        }}\r\n                        style={{ marginRight: 10 }}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        loading={loadingAnalyze}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </div>\r\n                </Form>\r\n              </Modal>\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                size={\"large\"}\r\n                className=\"commandBtn\"\r\n                onClick={(e) => setShowAnalyze(true)}\r\n              >\r\n                <MessageOutlined />\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                size={\"large\"}\r\n                className=\"delBtn\"\r\n                danger\r\n                onClick={(e) => setDelComp(!delComp)}\r\n              >\r\n                {delComp ? <CloseOutlined /> : <DeleteOutlined />}\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                size={\"large\"}\r\n                className=\"addBtn\"\r\n                onClick={(e) => {\r\n                  setAddCompOpen(true);\r\n                  setDelComp(false);\r\n                }}\r\n              >\r\n                <PlusOutlined />\r\n              </Button>\r\n              <DeviceDrawer open={open}/>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}