{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anto\\\\Desktop\\\\Things\\\\stage\\\\task-2 stage\\\\automationui\\\\src\\\\components\\\\Light.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, Slider, Switch, Button } from \"antd\";\nimport { BulbOutlined, MinusCircleTwoTone } from \"@ant-design/icons\";\nimport { updateLightInfo, deleteLight, getLightInfo } from \"../Request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Light = props => {\n  _s();\n\n  const [checked, setChecked] = React.useState(props.data.light_status);\n  const [brightness, setBrightness] = React.useState(props.data.brightness);\n  const [lightInfo, setLightInfo] = React.useState(props.data);\n  const [available, setAvailable] = React.useState(true);\n\n  const lightDelete = async lightID => {\n    await deleteLight(lightID);\n  };\n\n  React.useEffect(() => {\n    async function initialSetup() {\n      getLightInfo(props.data.id).then(res => {\n        setLightInfo(res.data);\n        setChecked(res.data.light_status);\n        setBrightness(res.data.brightness);\n      });\n    }\n\n    initialSetup();\n  }, [props.refresh]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: available ? /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 200,\n        margin: \"20px 10px\",\n        height: \"330px\",\n        borderRadius: \"10px\"\n      },\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0\n          },\n          children: lightInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), props.delete ? /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          danger: true,\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(MinusCircleTwoTone, {\n            twoToneColor: \"#ff0000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this),\n          onClick: e => {\n            lightDelete(lightInfo.id);\n            setAvailable(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(BulbOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this),\n      bordered: false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: 20,\n          paddingRight: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: 0\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: checked,\n          checkedChildren: \"ON\",\n          unCheckedChildren: \"OFF\",\n          onChange: val => {\n            updateLightInfo(lightInfo.id, JSON.stringify({\n              light_status: val\n            }));\n            setChecked(val);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Brightness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          disabled: !checked,\n          value: checked ? brightness : 0,\n          marks: {\n            0: \"0%\",\n            100: \"100%\"\n          },\n          onChange: val => setBrightness(val),\n          onAfterChange: val => updateLightInfo(lightInfo.id, JSON.stringify({\n            brightness: val\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : false\n  }, void 0, false);\n};\n\n_s(Light, \"zYtY+muXJEQ819msZ23gcPZqgbQ=\");\n\n_c = Light;\nexport default Light;\n\nvar _c;\n\n$RefreshReg$(_c, \"Light\");","map":{"version":3,"sources":["C:/Users/Anto/Desktop/Things/stage/task-2 stage/automationui/src/components/Light.js"],"names":["React","Card","Slider","Switch","Button","BulbOutlined","MinusCircleTwoTone","updateLightInfo","deleteLight","getLightInfo","Light","props","checked","setChecked","useState","data","light_status","brightness","setBrightness","lightInfo","setLightInfo","available","setAvailable","lightDelete","lightID","useEffect","initialSetup","id","then","res","refresh","width","margin","height","borderRadius","display","flexDirection","justifyContent","alignItems","name","delete","e","marginBottom","paddingRight","val","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Slider, Switch, Button } from \"antd\";\r\nimport { BulbOutlined, MinusCircleTwoTone } from \"@ant-design/icons\";\r\nimport { updateLightInfo, deleteLight, getLightInfo } from \"../Request\";\r\n\r\nconst Light = (props) => {\r\n  const [checked, setChecked] = React.useState(props.data.light_status);\r\n  const [brightness, setBrightness] = React.useState(props.data.brightness);\r\n  const [lightInfo, setLightInfo] = React.useState(props.data);\r\n  const [available, setAvailable] = React.useState(true);\r\n\r\n  const lightDelete = async (lightID) => {\r\n    await deleteLight(lightID);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    async function initialSetup(){\r\n      getLightInfo(props.data.id).then(res => {\r\n        setLightInfo(res.data);\r\n        setChecked(res.data.light_status);\r\n        setBrightness(res.data.brightness);\r\n      });\r\n    }\r\n    initialSetup()\r\n  }, [props.refresh]);\r\n\r\n  return (\r\n    <>\r\n      {available ? (\r\n        <Card\r\n          style={{\r\n            width: 200,\r\n            margin: \"20px 10px\",\r\n            height: \"330px\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n          title={\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <p style={{ margin: 0 }}>{lightInfo.name}</p>\r\n              {props.delete ? (\r\n                <Button\r\n                  size=\"small\"\r\n                  danger\r\n                  type=\"text\"\r\n                  icon={<MinusCircleTwoTone twoToneColor=\"#ff0000\" />}\r\n                  onClick={(e) => {\r\n                    lightDelete(lightInfo.id);\r\n                    setAvailable(false);\r\n                  }}\r\n                />\r\n              ) : (\r\n                <BulbOutlined />\r\n              )}\r\n            </div>\r\n          }\r\n          bordered={false}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              marginBottom: 20,\r\n              paddingRight: 5,\r\n            }}\r\n          >\r\n            <h4 style={{ margin: 0 }}>Status</h4>\r\n            <Switch\r\n              checked={checked}\r\n              checkedChildren=\"ON\"\r\n              unCheckedChildren=\"OFF\"\r\n              onChange={(val) => {\r\n                updateLightInfo(\r\n                  lightInfo.id,\r\n                  JSON.stringify({ light_status: val })\r\n                );\r\n                setChecked(val);\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h4>Brightness</h4>\r\n            <Slider\r\n              disabled={!checked}\r\n              value={checked ? brightness : 0}\r\n              marks={{ 0: \"0%\", 100: \"100%\" }}\r\n              onChange={(val) => setBrightness(val)}\r\n              onAfterChange={(val) =>\r\n                updateLightInfo(\r\n                  lightInfo.id,\r\n                  JSON.stringify({ brightness: val })\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        false\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Light;\r\n"]},"metadata":{},"sourceType":"module"}