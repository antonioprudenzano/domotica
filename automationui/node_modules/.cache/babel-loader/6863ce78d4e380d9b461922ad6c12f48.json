{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anto\\\\Desktop\\\\Things\\\\stage\\\\task-2 stage\\\\automationui\\\\src\\\\components\\\\DeviceDrawer.js\";\nimport React from 'react';\nimport { Tabs, Select, Button, Form, Input, Drawer } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst {\n  TabPane\n} = Tabs;\n\nconst DeviceDrawer = props => {\n  const tabs = {\n    1: \"addRoomForm\",\n    2: \"addCompForm\"\n  };\n\n  const handleTabs = id => {\n    setActiveTab(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    width: 360,\n    onClose: e => {\n      props.open.setIsOpen(false);\n      props.displayLightName.setDisplayLightName(false);\n    },\n    visible: props.open.isOpen,\n    destroyOnClose: \"true\",\n    bodyStyle: {\n      paddingTop: 5\n    },\n    footer: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => {\n          props.open.setIsOpen(false);\n          props.displayLightName.setDisplayLightName(false);\n        },\n        style: {\n          marginRight: 8\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        form: tabs[activeTab],\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"1\",\n      onChange: handleTabs,\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Add room\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: addRoomHandle,\n          onFinishFailed: e => props.open.setIsOpen(true),\n          id: \"addRoomForm\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"room\",\n            label: \"Room\",\n            rules: [{\n              required: true,\n              message: \"Please choose a name for your room\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Room name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Add device\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          layout: \"vertical\",\n          onFinish: handleSubmit,\n          onFinishFailed: e => props.open.setIsOpen(true),\n          id: \"addCompForm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"room\",\n            label: \"Room\",\n            rules: [{\n              required: true,\n              message: \"Please select a room to add\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select the room\",\n              children: rooms.map(room => {\n                return /*#__PURE__*/_jsxDEV(Option, {\n                  value: room.id,\n                  children: room.name.charAt(0).toUpperCase() + room.name.slice(1)\n                }, room.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"device\",\n            label: \"Smart device type\",\n            rules: [{\n              required: true,\n              message: \"Please select a device to add\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select the smart device type\",\n              onChange: value => {\n                value === \"light\" ? props.displayLightName.setDisplayLightName(true) : props.displayLightName.setDisplayLightName(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"light\",\n                children: \"Light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"thermostat\",\n                children: \"Thermostat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), props.displayLightName.displayLightName ? /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"lightName\",\n            label: \"Light Name\",\n            rules: [{\n              required: true,\n              message: \"Please choose a name for your light\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Light name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this) : false]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DeviceDrawer;\nexport default DeviceDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDrawer\");","map":{"version":3,"sources":["C:/Users/Anto/Desktop/Things/stage/task-2 stage/automationui/src/components/DeviceDrawer.js"],"names":["React","Tabs","Select","Button","Form","Input","Drawer","Option","TabPane","DeviceDrawer","props","tabs","handleTabs","id","setActiveTab","e","open","setIsOpen","displayLightName","setDisplayLightName","isOpen","paddingTop","textAlign","marginRight","activeTab","addRoomHandle","required","message","handleSubmit","rooms","map","room","name","charAt","toUpperCase","slice","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Tabs, Select, Button, Form, Input, Drawer } from 'antd'\r\n\r\n\r\nconst { Option } = Select;\r\nconst { TabPane } = Tabs;\r\n\r\nconst DeviceDrawer = (props) => {\r\n\r\n  const tabs = { 1: \"addRoomForm\", 2: \"addCompForm\" };\r\n\r\n  const handleTabs = (id) => {\r\n    setActiveTab(id);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      width={360}\r\n      onClose={(e) => {\r\n        props.open.setIsOpen(false);\r\n        props.displayLightName.setDisplayLightName(false);\r\n      }}\r\n      visible={props.open.isOpen}\r\n      destroyOnClose=\"true\"\r\n      bodyStyle={{ paddingTop: 5 }}\r\n      footer={\r\n        <div\r\n          style={{\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={(e) => {\r\n              props.open.setIsOpen(false);\r\n              props.displayLightName.setDisplayLightName(false);\r\n            }}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            form={tabs[activeTab]}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <Tabs defaultActiveKey=\"1\" onChange={handleTabs}>\r\n        <TabPane tab=\"Add room\" key=\"1\">\r\n          <Form\r\n            layout=\"vertical\"\r\n            onFinish={addRoomHandle}\r\n            onFinishFailed={(e) => props.open.setIsOpen(true)}\r\n            id=\"addRoomForm\"\r\n          >\r\n            <Form.Item\r\n              name=\"room\"\r\n              label=\"Room\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please choose a name for your room\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Room name\" />\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n        <TabPane tab=\"Add device\" key=\"2\">\r\n          <Form\r\n            layout=\"vertical\"\r\n            onFinish={handleSubmit}\r\n            onFinishFailed={(e) => props.open.setIsOpen(true)}\r\n            id=\"addCompForm\"\r\n          >\r\n            <Form.Item\r\n              name=\"room\"\r\n              label=\"Room\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please select a room to add\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select placeholder=\"Select the room\">\r\n                {rooms.map((room) => {\r\n                  return (\r\n                    <Option key={room.id} value={room.id}>\r\n                      {room.name.charAt(0).toUpperCase() +\r\n                        room.name.slice(1)}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"device\"\r\n              label=\"Smart device type\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please select a device to add\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                placeholder=\"Select the smart device type\"\r\n                onChange={(value) => {\r\n                  value === \"light\"\r\n                    ? props.displayLightName.setDisplayLightName(true)\r\n                    : props.displayLightName.setDisplayLightName(false);\r\n                }}\r\n              >\r\n                <Option value=\"light\">Light</Option>\r\n                <Option value=\"thermostat\">Thermostat</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            {props.displayLightName.displayLightName ? (\r\n              <Form.Item\r\n                name=\"lightName\"\r\n                label=\"Light Name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please choose a name for your light\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Light name\" />\r\n              </Form.Item>\r\n            ) : (\r\n              false\r\n            )}\r\n          </Form>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default DeviceDrawer"]},"metadata":{},"sourceType":"module"}